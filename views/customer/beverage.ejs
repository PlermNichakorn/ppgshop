<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Beverages</title>

  <link rel="stylesheet" href="/css2/Customer/style_beverage.css">

  <%- include('../partials/link') %>

    
</head>

<body>
  <%- include('../partials/navigator') %>

  <section id="content">
    <h1>Beverages</h1>
    <div class="carousel-container">
      <div id="carouselExample" class="carousel slide">
        <div class="carousel-inner">
          <div class="carousel-item active">
            <img src="/image//splash_1.png" class="d-block w-100">
          </div>
          <div class="carousel-item">
            <img src="/image/softDrink_1.png" class="d-block w-100">
          </div>
          <div class="carousel-item">
            <img src="/image/ice.jpg" class="d-block w-100">
          </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
      </div>
    </div>
    <div class="line">
      <hr>
      <p>ALL BEVERAGES</p>
      <hr>
    </div>
    <br>
  </section>

    <section id="categoryF">
      <!-- <div id="box-container" class="container" style="display: inline-block;"> -->
      <div class="row" style="display: inline">
        <div class="col-lg-12" style="padding: 0% 2% 0% 2%">
          <div id="productList" class="row container-fluid" style="margin: auto"></div>
        </div>
      </div>
      <!-- </div> -->
    </section>

    <section>
      <div id="pagination" class="text-center">
        <nav aria-label="Page navigation"></nav>
      </div>
    </section>

    <%- include('../partials/footer') %>

      <script>
        document.addEventListener("DOMContentLoaded", function () {
          fetchProducts(1); // Fetch the first page of products
        });

        function getCookie(name) {
          const value = `; ${document.cookie}`;
          const parts = value.split(`; ${name}=`);
          if (parts.length === 2) return parts.pop().split(";").shift();
        }
        // Usage
        const userId = getCookie("user_id");
        
        fetch(`http://localhost:3003/cart/${userId}`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Success cart:", data);
            const cartCountElement = document.querySelector(".cart-count");
            cartCountElement.textContent = data.length;
          })
          .catch((error) => {
            console.error("Error:", error);
          });

        function fetchProducts(pageNumber) {
          fetch(
            `http://localhost:3003/product-category/4?page=${pageNumber}&limit=8`,
            {
              method: "GET",
              headers: {
                "Content-Type": "application/json",
              },
            }
          )
            .then((response) => response.json())
            .then((data) => {
              displayProducts(data.products);
              generatePagination(data.totalPages, data.currentPage);
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }

        function generatePagination(totalPages, currentPage) {
          const paginationDiv = document.getElementById("pagination");
          paginationDiv.innerHTML = ""; // Clear existing pagination links

          const ul = document.createElement("ul");
          ul.className = "pagination";

          // Generate "Previous" link
          if (currentPage > 1) {
            const prevLi = document.createElement("li");
            prevLi.className = "page-item";
            prevLi.innerHTML = `<p class="page-link" style="cursor: pointer;" onclick="fetchProducts(${currentPage - 1
              })">Previous</a>`;
            ul.appendChild(prevLi);
          }

          // Generate page number links
          for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement("li");
            li.className = "page-item";
            li.innerHTML = `<p class="page-link" style="cursor: pointer;" onclick="fetchProducts(${i})">${i}</a>`;
            if (i === currentPage) {
              li.classList.add("active"); // Highlight the current page
            }
            ul.appendChild(li);
          }

          // Generate "Next" link
          if (currentPage < totalPages) {
            const nextLi = document.createElement("li");
            nextLi.className = "page-item";
            nextLi.innerHTML = `<p class="page-link" style="cursor: pointer;" onclick="fetchProducts(${currentPage + 1
              })">Next</a>`;
            ul.appendChild(nextLi);
          }

          paginationDiv.appendChild(ul);
        }

        // ฟังก์ชันเพื่อดึงสินค้าตามหมวดหมู่
        /*function fetchProductsByCategory(categoryId) {
            fetch(`/product-category/${categoryId}`)
              .then(response => {
                if (!response.ok) {
                  throw new Error('การตอบกลับจากเครือข่ายไม่ถูกต้อง');
                }
                return response.json();
              })
              .then(products => {
                displayProducts(products);
              })
              .catch(error => {
                console.error('มีปัญหาในการดึงข้อมูล:', error);
              });
          }*/

        function displayProducts(products) {
          const productList = document.getElementById("productList");
          // Clear old data
          productList.innerHTML = "";

          products.forEach((product) => {
            const productDiv = document.createElement("div");
            productDiv.className = "productbox col-6 col-md-3";
            productDiv.dataset.productId = product.product_ID;

            // Modify the innerHTML to include an onclick event
            productDiv.innerHTML = `
    <div class="box" onclick="redirectToProductInfo(${product.product_ID})" style="cursor: pointer;">
      <div class="img-container">
        <img class="imageFoecate" src="${product.imagesrc}" alt="${product.product_Name}">
      </div>
      <div class="descript">
        <p>${product.product_Name}</p>
      </div>
      <div class="cartButton">
        <p><span style="color: red; margin-left: 4%;">฿${product.price}</span></p>
        <button class="cart">ADD TO CART</button>
      </div>
    </div>
    `;
            // Add event listener to the "ADD TO CART" button
            const addToCartButton = productDiv.querySelector(".cart");
            addToCartButton.addEventListener("click", function (event) {
              event.stopPropagation(); // Prevent the click event from bubbling up to the parent div
              const productId = productDiv.dataset.productId;
              addToCart(productId, productDiv);
            });

            productList.appendChild(productDiv);
          });
        }

        function redirectToProductInfo(product_ID) {
          // Construct the URL for the productInCategory page with the product_ID
          const productInCategoryUrl = `/information?product_ID=${product_ID}`;

          // Redirect the user to the productInCategory page
          window.location.href = productInCategoryUrl;
        }

        function addToCart(productId, productDiv) {
          // ตรวจสอบว่าสินค้านี้มีอยู่ในตะกร้าหรือไม่
          console.log(`Product ID: ${productId} added to cart.`);

          const productData = {
            product_id: Number(productId),
            user_id: Number(userId),
            amount: 1,
          };

          fetch(`http://localhost:3003/cart`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(productData),
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("Success product:", data);
              updateCartCount(); // อัปเดตจำนวนสินค้าในตะกร้า
            })
            .catch((error) => {
              console.log("Error:", error);
            });
        }

        function updateCartCount() {
          fetch(`http://localhost:3003/cart/${userId}`, {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("Success cart:", data);
              const cartCountElement = document.querySelector(".cart-count");
              cartCountElement.textContent = data.length;
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }
      </script>

      <%- include('../partials/script') %>
</body>
<footer>
  <script src="fruits.js" charset="utf-8"></script>
</footer>

</html>