<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Checkout Page</title>

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
      crossorigin="anonymous"
    />

    <!-- custom CSS -->
    <link rel="stylesheet" href="css2/Customer/style_productList.css" />

    <link
      href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css"
      rel="stylesheet"
    />

    <!-- Font family -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Jockey+One&display=swap"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap"
      rel="stylesheet"
    />
  </head>

  <body>
    <%- include('../partials/navigator') %>

    <div class="stepper-wrapper">
      <div class="stepper-item active">
        <div class="step-counter">1</div>
        <div class="step-name">Product list & Order details</div>
      </div>
      <div class="stepper-item incompleted">
        <div class="step-counter">2</div>
        <div class="step-name">Payment & Order Remarks</div>
      </div>
      <div class="stepper-item incompleted">
        <div class="step-counter">3</div>
        <div class="step-name">Order Complete</div>
      </div>
    </div>

    <section id="feature" class="container-lg">
      <div class="row">
        <!-- Content for the left side -->
        <div class="col-md-8">
          <div class="row">
            <div class="col-md-12 mb-4">
              <div class="productlist">
                <div class="container h-100 py-5">
                  <div
                    class="row d-flex justify-content-center align-items-center h-100"
                  >
                    <div class="col">
                      <div class="table-responsive">
                        <table class="table" id="productTable">
                          <thead>
                            <tr>
                              <th scope="col" class="h5">
                                <b>Product list</b>
                              </th>
                              <th scope="col">Price/Unit</th>
                              <th scope="col" class="text-center">Quantity</th>
                              <th scope="col">Unit</th>
                              <th scope="col">Discount</th>
                              <th scope="col">Total</th>
                              <th scope="col"></th>
                            </tr>
                          </thead>
                          <tbody></tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-12">
                <div class="address">
                  <p><b>Delivery Address Information</b></p>
                  <p>Chiangmai University</p>
                  <p>239, Huay Kaew Road, Muang District, Chiang Mai, 50200</p>
                  <div class="row">
                    <div class="col-sm2 col-lg-10">
                      <p>Receiver: ABC Mobile no: 0123456789</p>
                    </div>
                    <div class="backbutton">
                      <div class="col-sm2 col-lg-10">
                        <a href="/html/paymentPage.html" style="color: red"
                          ><i class="fa fa-pencil"></i> Change delivery
                          address</a
                        >
                      </div>
                    </div>
                  </div>
                  <div class="paymentbutton">
                    <a
                      href="/html2/Customer/paymentPage.html"
                      class="btn btn-warning"
                      style="color: white"
                      ><b>Go to payment </b><i class="fa fa-angle-right"></i
                    ></a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Content for the right side -->
        <div class="col-md-4">
          <div class="summary">
            <div class="card mb-4">
              <div class="card-body">
                <strong>Summary</strong>
                <ul class="list-group list-group-flush" id="summaryList">
                  <li
                    class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0"
                  >
                    Subtotal
                    <span>Bath</span>
                  </li>
                  <li
                    class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0"
                  >
                    Total discount
                    <span>Bath</span>
                  </li>
                  <li
                    class="list-group-item d-flex justify-content-between align-items-center px-0"
                  >
                    Delivery fee
                    <span>Bath</span>
                  </li>
                  <li
                    class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3"
                  >
                    <div>
                      <strong>Grand Total</strong>
                    </div>
                    <span><strong>Bath</strong></span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <%- include('../partials/footer') %>
    <script>
      let grandTotals = 0;
      function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(";").shift();
      }
      const userId = getCookie("user_id");
      // Fetch the data from the API
      const fetchAndRenderCart = () => {
        fetch(`http://localhost:3003/cart/${userId}`)
          .then((response) => response.json())
          .then((data) => {
            const tableBody = document
              .getElementById("productTable")
              .getElementsByTagName("tbody")[0];
            tableBody.innerHTML = ""; // Clear the table body

            let grandTotal = 0; // Initialize grand total
            grandTotals = 0;

            data.forEach((item) => {
              const row = tableBody.insertRow();
              const productCell = row.insertCell(0);
              const priceCell = row.insertCell(1);
              const quantityCell = row.insertCell(2);
              const unitCell = row.insertCell(3);
              const discountCell = row.insertCell(4);
              const totalCell = row.insertCell(5);
              const trashCell = row.insertCell(6);

              productCell.innerHTML = `
                      <div class="d-flex align-items-center">
                          <img src="${item.imagesrc}" class="img-fluid rounded-3" style="width: 120px;" alt="picture">
                          <div class="flex-column ms-4">
                              <p>${item.product_Name}</p>
                          </div>
                      </div>`;
              priceCell.innerHTML = `<p class="mb-0" style="font-weight: 500;">${item.price}</p>`;
              quantityCell.innerHTML = `<input type="number" class="form-control text-center" value="${item.amount}">`;
              unitCell.innerHTML = `<p class="mb-0" style="font-weight: 500;">-</p>`;
              discountCell.innerHTML = `<p class="mb-0" style="font-weight: 500;">${item.promotion}</p>`;
              const totalPrice = parseFloat(item.price) * item.amount;
              totalCell.innerHTML = `<p class="mb-0" style="font-weight: 500;">${totalPrice.toFixed(
                2
              )}</p>`;
              grandTotal += totalPrice; // Add to grand total
              grandTotals += totalPrice;
              trashCell.innerHTML = `<i class="fa fa-trash-o" style="font-size:24px; color: red; cursor: pointer;"></i>`;

              const quantityInput = quantityCell.querySelector("input");
              let timeoutId = null;
              quantityInput.addEventListener("input", () => {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() => {
                  updateQuantity(item.cart_id, quantityInput.value).then(() =>
                    fetchAndRenderCart()
                  );
                }, 2000);
              });

              const trashIcon = trashCell.querySelector("i");
              trashIcon.addEventListener("click", function () {
                // Display a confirmation alert
                if (
                  window.confirm(
                    "Are you sure delete cart?"
                  )
                ) {
                  // If the user clicks OK, proceed with deleting the item
                  deleteCart(item.cart_id).then(() => fetchAndRenderCart());
                }
              });
            });

            // Update the Grand Total section
            document.querySelector(
              "#summaryList li:last-child span:last-child"
            ).textContent = grandTotal.toFixed(2) + " Bath";
            updateGrandTotalAndLink();
          })
          .catch((error) => console.error("Error:", error));
      };

      const deleteCart = (cartId) => {
        return fetch(`http://localhost:3003/cart/${cartId}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => console.log("Delete cart successfully:", data))
          .catch((error) => console.error("Error Delete cart:", error));
      };

      // Function to update the quantity and refresh the cart
      const updateQuantity = (productId, newQuantity) => {
        return fetch(`http://localhost:3003/cart/${productId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ amount: newQuantity }),
        })
          .then((response) => response.json())
          .then((data) => console.log("Quantity updated successfully:", data))
          .catch((error) => console.error("Error updating quantity:", error));
      };
      // Initial fetch and render
      fetchAndRenderCart();

      function updateGrandTotalAndLink() {
        // สร้างลิงค์ใหม่ที่มี grandTotal ที่ถูกอัปเดต
        const newLink = `/payment?grandTotal=${grandTotals}`;
        // หาลิงค์เก่าและอัปเดต href ของมัน
        const oldLink = document.querySelector(".btn-warning");
        oldLink.href = newLink;
      }
    </script>

    <%- include('../partials/script') %>
  </body>
</html>
